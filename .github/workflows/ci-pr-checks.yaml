name: CI - PR Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v5
        
      - name: Sanity check repo contents
        run: ls -la

      - name: Extract Go version from go.mod
        run: sed -En 's/^go (.*)$/GO_VERSION=\1/p' go.mod >> $GITHUB_ENV

      - name: Set up Go with cache
        uses: actions/setup-go@v6
        with:
          go-version: "${{ env.GO_VERSION }}"
          cache-dependency-path: ./go.sum

      - name: Install libzmq dependencies (kvcache/kvevents)
        run: |
          sudo apt-get update
          sudo apt-get install -y libzmq3-dev pkg-config

      - name: Set PKG_CONFIG_PATH
        run: echo "PKG_CONFIG_PATH=/usr/lib/pkgconfig" >> $GITHUB_ENV

      - name: go mod tidy
        run: go mod tidy

      - name: Run lint checks
        uses: golangci/golangci-lint-action@v8
        with:
          version: 'v2.1.6'
          args: "--config=./.golangci.yml"

      - name: Run make test
        shell: bash 
        run: |
          make test sidecar-test

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: coverage.out # Make sure to use the same file name you chose for the "-coverprofile" in the "make test" step

      - name: Run make build
        shell: bash
        run: |
          make build sidecar-build

  code_coverage:
    name: "Code coverage report"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: lint-and-test # Depends on the artifact uploaded by the "lint-and-test" job
    permissions:
      contents:      read
      actions:       read  # to download code coverage results from "lint-and-test" job
      pull-requests: write # write permission needed to comment on PR
    steps:
      - uses: fgrosse/go-coverage-report@v1.2.0
        with:
          coverage-artifact-name: "code-coverage"
          coverage-file-name: "coverage.out"
